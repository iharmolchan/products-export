<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="products-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="post:\products:application\json:products-config-201-application\json-FlowTest" description="Verifying functionality of [post:\products:application\json:products-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="products-main" />
            <munit:enable-flow-source value="post:\products:application\json:products-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="a2b9032b-4fa5-4fb9-a463-01f2803080ac" processor="sftp:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="91764999-0890-4913-9935-051b3a340ab2" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
        </munit:behavior>
		<munit:execution>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_products_application_json.json')]" />
			<http:request config-ref="HTTP_Request_Configuration" method="POST" path="/products">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(readUrl('classpath://scaffolder/response/post_201_products_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\products:application\json:products-config-400-application\json-FlowTest" description="Verifying functionality of [post:\products:application\json:products-config-400-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="products-main" />
            <munit:enable-flow-source value="post:\products:application\json:products-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="d5307d00-0ca1-47c5-9214-4632c3849f6d" processor="sftp:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="91764999-0890-4913-9935-051b3a340ab2" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
        </munit:behavior>
		<munit:execution>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_products_application_invalid_json.json')]" />
			<http:request config-ref="HTTP_Request_Configuration" method="POST" path="/products">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\products:application\json:products-config-500-application\json-FlowTest" description="Verifying functionality of [post:\products:application\json:products-config-500-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="products-main" />
            <munit:enable-flow-source value="post:\products:application\json:products-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="c7df6075-c074-4732-8d39-7d2fc08fcecb" processor="sftp:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="91764999-0890-4913-9935-051b3a340ab2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
		<munit:execution>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_products_application_json.json')]" />
			<http:request config-ref="HTTP_Request_Configuration" method="POST" path="/products">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="500" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(500)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 500" />
        </munit:validation>
    </munit:test>
</mule>
